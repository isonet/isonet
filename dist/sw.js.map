{"version":3,"sources":["sw.js"],"names":["self","addEventListener","skipWaiting","clients","claim","catch","event","respondWith","caches","match","request","then","cacheResponse","networkTry","fetch","networkResponse","open","cache","put","clone","Response","status"],"mappings":";AAAAA,KAAKC,iBAAiB,UAAW,WAC7BD,KAAKE,cACLC,QAAQC,QAAQC,MAAM,WAAM,OAAA,SAEhCL,KAAKC,iBAAiB,QAAS,SAACK,GAC5BA,EAAMC,YAEFC,OAAOC,MAAMH,EAAMI,SAASC,KAAK,SAACC,GAGvBC,OADYC,MAAMR,EAAMI,SACbC,KAAK,SAACI,GACbP,OAAAA,OAAOQ,KAAK,WAAWL,KAAK,SAACM,GAEzBF,OADPE,EAAMC,IAAIZ,EAAMI,QAASK,EAAgBI,SAClCJ,MAEZV,MAAM,WACDO,OAAAA,GAGO,IAAIQ,SAAS,KAAM,CAACC,OAAQ","file":"sw.js","sourceRoot":"..\\src","sourcesContent":["self.addEventListener('install', () => {\r\n    self.skipWaiting();\r\n    clients.claim().catch(() => null);\r\n});\r\nself.addEventListener('fetch', (event) => {\r\n    event.respondWith(\r\n        // Try the cache\r\n        caches.match(event.request).then((cacheResponse) => {\r\n            // Fall back to network\r\n            const networkTry = fetch(event.request);\r\n            return networkTry.then((networkResponse) => {\r\n                return caches.open('default').then((cache) => {\r\n                    cache.put(event.request, networkResponse.clone());\r\n                    return networkResponse\r\n                });\r\n            }).catch(() => {\r\n                if (cacheResponse) {\r\n                    return cacheResponse;\r\n                } else {\r\n                    return new Response(null, {status: 404});\r\n                }\r\n            })\r\n        })\r\n    );\r\n});"]}